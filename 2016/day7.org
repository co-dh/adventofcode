* Part 1 
  
http://adventofcode.com/2016/day/7

#+BEGIN_SRC q :results silent
\l lib.q
#+END_SRC



|           | "ioxxoj[asdfgh]zxcvbn"                            |
|-----------+---------------------------------------------------|
|           | fork                                              |
|           | =>("ioxxoj[asdfgh]zxcvbn";"ioxxoj[asdfgh]zxcvbn") |
|           | p2[next; ::]                                      |
|           | =>("oxxoj[asdfgh]zxcvbn ";"ioxxoj[asdfgh]zxcvbn") |
|           | .[=]                                              |
|           | =>00100000000000000000b                           |
|-----------+---------------------------------------------------|
| equNext : | {.[=] p2[next; ::] fork x}                        |
#+TBLFM: $2='(step2 @# @0 @-1 @1)::@>$2='(qq (qf2 $-1 @2$2..@-1$2))

|            | " aaaa[qwer]tyui"                       |
|------------+-----------------------------------------|
|            | fork                                    |
|            | =>(" aaaa[qwer]tyui";" aaaa[qwer]tyui") |
|            | p2[prev; ::]                            |
|            | =>("  aaaa[qwer]tyu";" aaaa[qwer]tyui") |
|            | .[=]                                    |
|            | =>101110000000000b                      |
|            | not                                     |
|            | =>010001111111111b                      |
|------------+-----------------------------------------|
| NotEqPrev: | {not .[=] p2[prev; ::] fork x}          |
#+TBLFM: $2='(step2 @# @0 @-1 @1)::@>$2='(qq (qf2 $-1 @2$2..@-1$2))

|           | "ioxxoj[asdfgh]zxcvbn"                            |
|-----------+---------------------------------------------------|
|           | fork                                              |
|           | =>("ioxxoj[asdfgh]zxcvbn";"ioxxoj[asdfgh]zxcvbn") |
|           | p2[prev; next]                                    |
|           | =>(" ioxxoj[asdfgh]zxcvb";"oxxoj[asdfgh]zxcvbn ") |
|           | p2[::; next]                                      |
|           | =>(" ioxxoj[asdfgh]zxcvb";"xxoj[asdfgh]zxcvbn  ") |
|           | .[=]                                              |
|           | =>00100000000000000000b                           |
|-----------+---------------------------------------------------|
| prevEq2n: | {.[=] p2[::; next] p2[prev; next] fork x}         |
#+TBLFM: $2='(step2 @# @0 @-1 @1)::@>$2='(qq (qf2 $-1 @2$2..@-1$2))

|       | "ioxxoj[asdfgh]zxcvbn"                                                   |
|-------+--------------------------------------------------------------------------|
|       | fork3                                                                    |
|       | =>("ioxxoj[asdfgh]zxcvbn";"ioxxoj[asdfgh]zxcvbn";"ioxxoj[asdfgh]zxcvbn") |
|       | p3[equNext ; NotEqPrev; prevEq2n]                                        |
|       | =>(00100000000000000000b;11101111111111111111b;00100000000000000000b)    |
|       | (and/)                                                                   |
|       | =>00100000000000000000b                                                  |
|       | where                                                                    |
|       | =>,2                                                                     |
|-------+--------------------------------------------------------------------------|
| abba: | {where (and/) p3[equNext ; NotEqPrev; prevEq2n] fork3 x}                 |
#+TBLFM: $2='(step2 @# @0 @-1 @1)::@>$2='(qq (qf2 $-1 @2$2..@-1$2))

|           | "luqpeubugunvgzdqk[jfnihalscclrffkxqz]wvzpvmpfiehevybbgpg[esjuempbtmfmwwmqa]rhflhjrqjbbsadjnyc" |
|-----------+-------------------------------------------------------------------------------------------------|
|           | fork                                                                                            |
|           | =>("luqpeubugunvgzdqk[jfnihalscclrffkxqz]wvzpvmpfiehevybbgpg[esjuempbtmfmwwmqa]..               |
|           | p2["["=; "]"=]                                                                                  |
|           | =>(0000000000000000010000000000000000000000000000000000000010000000000000000000..               |
|           | where each                                                                                      |
|           | =>(17 56;36 74)                                                                                 |
| zip       | (.[,'])                                                                                         |
|           | =>(17 36;56 74)                                                                                 |
|-----------+-------------------------------------------------------------------------------------------------|
| brackets: | {(.[,']) where each p2["["=; "]"=] fork x}                                                      |
#+TBLFM: $2='(step2 @# @0 @-1 @1)::@>$2='(qq (qf2 $-1 @2$2..@-1$2))

|                 | (69; "luqpeubugunvgzdqk[jfnihalscclrffkxqz]wvzpvmpfiehevybbgpg[esjuempbtmfmwwmqa]rhflhjrqjbbsadjnyc") |
|-----------------+-------------------------------------------------------------------------------------------------------|
|                 | p2[::; brackets]                                                                                      |
|                 | =>(69;(17 36;56 74))                                                                                  |
|                 | (.[within/:])                                                                                         |
|                 | =>01b                                                                                                 |
|                 | raze                                                                                                  |
|                 | =>01b                                                                                                 |
|                 | {$[0 = count x; 1b; any x]}                                                                           |
|                 | =>1b                                                                                                  |
|-----------------+-------------------------------------------------------------------------------------------------------|
| withinBrackets: | {{$[0 = count x; 1b; any x]} raze (.[within/:]) p2[::; brackets] x}                                   |
#+TBLFM: $2='(step2 @# @0 @-1 @1)::@>$2='(qq (qf2 $-1 @2$2..@-1$2))


|                 | "luqpeubugunvgzdqk[jfnihalscclrffkxqz]wvzpvmpfiehevybbgpg[esjuempbtmfmwwmqa]rhflhjrqjbbsadjnyc" |
|-----------------+-------------------------------------------------------------------------------------------------|
|                 | fork                                                                                            |
|                 | =>("luqpeubugunvgzdqk[jfnihalscclrffkxqz]wvzpvmpfiehevybbgpg[esjuempbtmfmwwmqa]..               |
|                 | p2[abba; ::]                                                                                    |
|                 | =>(,69;"luqpeubugunvgzdqk[jfnihalscclrffkxqz]wvzpvmpfiehevybbgpg[esjuempbtmfmww..               |
|                 | withinBrackets                                                                                  |
|                 | =>1b                                                                                            |
|                 | not                                                                                             |
|                 | =>0b                                                                                            |
|-----------------+-------------------------------------------------------------------------------------------------|
| abbaNoBrackets: | {not withinBrackets p2[abba; ::] fork x}                                                        |
#+TBLFM: $2='(step2 @# @0 @-1 @1)::@>$2='(qq (qf2 $-1 @2$2..@-1$2))


We can verify by:
  | abbaNoBrackets "abba[mnop]qrst"       | 1b |
  | abbaNoBrackets "abcd[bddb]xyyx"       | 0b |
  | abbaNoBrackets "aaaa[qwer]tyui"       | 0b |
  | abbaNoBrackets "ioxxoj[asdfgh]zxcvbn" | 1b |
   #+TBLFM: $2='(qq $1)
 
#+BEGIN_SRC q
sum abbaNoBrackets each read0 `:7.txt
#+END_SRC 

#+RESULTS:
| 115i |
|      |

* Part 2

  |             | "aba[bab]xyz"                   |
  |-------------+---------------------------------|
  |             | fork                            |
  |             | =>("aba[bab]xyz";"aba[bab]xyz") |
  |             | p2[prev; next]                  |
  |             | =>(" aba[bab]xy";"ba[bab]xyz ") |
  |             | .[=]                            |
  |             | =>01000100000b                  |
  |-------------+---------------------------------|
  | prevEqNext: | {.[=] p2[prev; next] fork x}    |
#+TBLFM: $2='(step2 @# @0 @-1 @1)::@>$2='(qq (qf2 $-1 @2$2..@-1$2))

  |            | "aaa[aaa]xyz"    |
  |------------+------------------|
  |            | (=)prior         |
  |            | =>01100110000b   |
  |            | not              |
  |            | =>10011001111b   |
  |------------+------------------|
  | notEqPrev: | {not (=)prior x} |
#+TBLFM: $2='(step2 @# @0 @-1 @1)::@>$2='(qq (qf2 $-1 @2$2..@-1$2))

  |            | "aaa[aaa]xyz"          |
  |------------+------------------------|
  |            | (in\:)[; "[]"]         |
  |            | =>00010001000b         |
  |            | not                    |
  |            | =>11101110111b         |
  |------------+------------------------|
  | noBracket: | {not (in\:)[; "[]"] x} |
  #+TBLFM: $2='(step2 @# @0 @-1 @1)::@>$2='(qq (qf2 $-1 @2$2..@-1$2))

  |      | "aaa[aaa]xyz"                                         |
  |------+-------------------------------------------------------|
  |      | fork3                                                 |
  |      | =>("aaa[aaa]xyz";"aaa[aaa]xyz";"aaa[aaa]xyz")         |
  |      | p3[prevEqNext; notEqPrev; noBracket]                  |
  |      | =>(01010100000b;10011001111b;11101110111b)            |
  |      | (and/)                                                |
  |      | =>00000000000b                                        |
  |------+-------------------------------------------------------|
  | aba: | {(and/) p3[prevEqNext; notEqPrev; noBracket] fork3 x} |
  #+TBLFM: $2='(step2 @# @0 @-1 @1)::@>$2='(qq (qf2 $-1 @2$2..@-1$2))

We can verify by:
  | aba "aba[bab]xyz" | 01000100000b |
  | aba "aaa[aaa]xyz" | 00000000000b |
   #+TBLFM: $2='(qq $1)

 #+BEGIN_SRC q
filterWith: {x[0] where x[1] each x[0]}
filterWith (1 5  ; within[;3 7])
withinAny: { any x within/: y } 
filterWith (1 5  ; withinAny[;(3 7; 2 8)])

notWithinAny: { not any x within/: y } 
#+END_SRC

#+RESULTS:
| ,5 |
| ,5 |
|    |



  |                | "aba[bab]xyz"                                                                          |
  |----------------+----------------------------------------------------------------------------------------|
  |                | fork                                                                                   |
  |                | =>("aba[bab]xyz";"aba[bab]xyz")                                                        |
  |                | p2[aba; brackets]                                                                      |
  |                | =>(01000100000b;,3 7)                                                                  |
  |                | p2[where; {withinAny[;x]}]                                                             |
  |                | =>(1 5;{any x within/: y }[;,3 7])                                                     |
  |                | filterWith                                                                             |
  |                | =>,5                                                                                   |
  |                | fork                                                                                   |
  |                | =>(,5;,5)                                                                              |
  |                | p2[::; 1+]                                                                             |
  |                | =>(,5;,6)                                                                              |
  |                | .[,']                                                                                  |
  |                | =>,5 6                                                                                 |
  |----------------+----------------------------------------------------------------------------------------|
  | abaInBrackets: | {.[,'] p2[::; 1+] fork filterWith p2[where; {withinAny[;x]}] p2[aba; brackets] fork x} |
  #+TBLFM: $2='(step2 @# @0 @-1 @1)::@>$2='(qq (qf2 $-1 @2$2..@-1$2))

Putting @ symbol into the table is causing some trouble, so I defined in q directly.
#+BEGIN_SRC q
atEach: (.[@/:])
atEach ("aba[bab]xyz";enlist[ 5 6])
#+END_SRC

#+RESULTS:
| "ab" |
|      |

  |                   | "aba[bab]xyz"                         |
  |-------------------+---------------------------------------|
  |                   | fork                                  |
  |                   | =>("aba[bab]xyz";"aba[bab]xyz")       |
  |                   | p2[::; abaInBrackets]                 |
  |                   | =>("aba[bab]xyz";,5 6)                |
  |                   | atEach                                |
  |                   | =>,"ab"                               |
  |-------------------+---------------------------------------|
  | abaTxtInBrackets: | {atEach p2[::; abaInBrackets] fork x} |
  #+TBLFM: $2='(step2 @# @0 @-1 @1)::@>$2='(qq (qf2 $-1 @2$2..@-1$2))

  |                 | "aba[bab]xyz"                                                                             |
  |-----------------+-------------------------------------------------------------------------------------------|
  |                 | fork                                                                                      |
  |                 | =>("aba[bab]xyz";"aba[bab]xyz")                                                           |
  |                 | p2[aba; brackets]                                                                         |
  |                 | =>(01000100000b;,3 7)                                                                     |
  |                 | p2[where; {notWithinAny[;x]}]                                                             |
  |                 | =>(1 5;{not any x within/: y }[;,3 7])                                                    |
  |                 | filterWith                                                                                |
  |                 | =>,1                                                                                      |
  |                 | fork                                                                                      |
  |                 | =>(,1;,1)                                                                                 |
  |                 | p2[::; 1+]                                                                                |
  |                 | =>(,1;,2)                                                                                 |
  |                 | .[,']                                                                                     |
  |                 | =>,1 2                                                                                    |
  |-----------------+-------------------------------------------------------------------------------------------|
  | abaOutBrackets: | {.[,'] p2[::; 1+] fork filterWith p2[where; {notWithinAny[;x]}] p2[aba; brackets] fork x} |
  #+TBLFM: $2='(step2 @# @0 @-1 @1)::@>$2='(qq (qf2 $-1 @2$2..@-1$2))

  |                    | "aba[bab]xyz"                                       |
  |--------------------+-----------------------------------------------------|
  |                    | fork                                                |
  |                    | =>("aba[bab]xyz";"aba[bab]xyz")                     |
  |                    | p2[::; abaOutBrackets]                              |
  |                    | =>("aba[bab]xyz";,1 2)                              |
  |                    | atEach                                              |
  |                    | =>,"ba"                                             |
  |                    | reverse each                                        |
  |                    | =>,"ab"                                             |
  |--------------------+-----------------------------------------------------|
  | abaTxtOutBrackets: | {reverse each atEach p2[::; abaOutBrackets] fork x} |
  #+TBLFM: $2='(step2 @# @0 @-1 @1)::@>$2='(qq (qf2 $-1 @2$2..@-1$2))


  |             | "aba[bab]xyz"                                                      |
  |-------------+--------------------------------------------------------------------|
  |             | fork                                                               |
  |             | =>("aba[bab]xyz";"aba[bab]xyz")                                    |
  |             | p2[abaTxtInBrackets; abaTxtOutBrackets]                            |
  |             | =>(,"ab";,"ab")                                                    |
  |             | .[inter]                                                           |
  |             | =>,"ab"                                                            |
  |             | count                                                              |
  |             | =>1                                                                |
  |             | 0<                                                                 |
  |             | =>1b                                                               |
  |-------------+--------------------------------------------------------------------|
  | supportSSL: | {0< count .[inter] p2[abaTxtInBrackets; abaTxtOutBrackets] fork x} |
  #+TBLFM: $2='(step2 @# @0 @-1 @1)::@>$2='(qq (qf2 $-1 @2$2..@-1$2))


We can verify by:
  | supportSSL "aba[bab]xyz"   | 1b |
  | supportSSL "xyx[xyx]xyx"   | 0b |
  | supportSSL "aaa[kek]eke"   | 1b |
  | supportSSL "zazbz[bzb]cdb" | 1b |
   #+TBLFM: $2='(qq $1)

#+BEGIN_SRC q
sum supportSSL each  read0 `:7.txt

#+END_SRC

#+RESULTS:
| 231i |
|      |

